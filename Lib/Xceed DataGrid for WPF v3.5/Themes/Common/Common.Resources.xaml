<!-- =======================================================================
  Xceed DataGrid for WPF - CUSTOMIZATION CODE - Default Styles and Templates
  Copyright (c) 2007-2009 Xceed Software Inc.

  [Common.Resources.xaml]

  This file is part of the Xceed DataGrid for WPF product. The use and
  distribution of this Customization Code is subject to the terms
  and conditions refering to "Customization Code" that are specified in
  the XCEED SOFTWARE LICENSE AGREEMENT accompanying this product.
======================================================================= -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.DataGrid"
                    xmlns:cnv="clr-namespace:Xceed.Wpf.DataGrid.Converters"
                    xmlns:views="clr-namespace:Xceed.Wpf.DataGrid.Views"
                    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">

   <!-- Style applied to the Thumbs that are used to resize the columns and rows.
        The Thumb's template is an empty Grid with a Transparent background to
        make it hit-testable. -->
   <Style x:Key="invisibleThumbStyle"
          TargetType="Thumb">

      <Setter Property="MinWidth"
              Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />

      <Setter Property="MinHeight"
              Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />

      <Setter Property="Template">
         <Setter.Value>

            <ControlTemplate TargetType="Thumb">
               <Grid Background="Transparent" />
            </ControlTemplate>

         </Setter.Value>
      </Setter>
   </Style>

   <!-- ControlTemplate applied to the button that is used in the FilterCell to clear the filter. -->
   <ControlTemplate x:Key="clearFilterButtonTemplate"
                    TargetType="Button">
      <ContentPresenter x:Name="rootLayout"
                        Content="{x:Null}"
                        Opacity="0.5"
                        ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).ClearFilterButtonGlyph}" />

      <ControlTemplate.Triggers>
         <Trigger Property="IsMouseOver"
                  Value="True">
            <Setter TargetName="rootLayout"
                    Property="Opacity"
                    Value="1" />
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>

   <!-- ControlTemplated applied to the Button that is used in the DataRows
        to expand/collapse Details. -->
   <ControlTemplate x:Key="detailsExpanderButtonTemplate"
                    TargetType="Button">
      <ContentPresenter x:Name="expanderGlyphPresenter"
                        Content="{x:Null}"
                        ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).CollapseGroupGlyph}" />

      <ControlTemplate.Triggers>
         <Trigger Property="local:DataGridControl.HasExpandedDetails"
                  Value="False">
            <Setter TargetName="expanderGlyphPresenter"
                    Property="ContentTemplate"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).ExpandGroupGlyph}" />
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>

   <!-- ControlTemplated applied to the ToggleButton that is used in the GroupHeaders
        to expand/collapse groups. -->
   <ControlTemplate x:Key="groupExpanderToggleButtonTemplate"
                    TargetType="ToggleButton">

      <ContentPresenter x:Name="expanderGlyphPresenter"
                        Content="{x:Null}"
                        ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).CollapseGroupGlyph}" />

      <ControlTemplate.Triggers>
         <Trigger Property="IsChecked"
                  Value="False">
            <Setter TargetName="expanderGlyphPresenter"
                    Property="ContentTemplate"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).ExpandGroupGlyph}" />
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>

   <!-- Default DataTemplate for displaying a Group (e.g. in a GroupHeader) -->
   <DataTemplate DataType="{x:Type local:Group}">
      <DataTemplate.Resources>
         <!-- When the property TableflowView.PinGroupHeaders is set, we will show the information for the parent groups seperated with a "-". -->
         <DataTemplate x:Key="parentGroupItemTemplate">
            <StackPanel Orientation="Horizontal">
               <local:GroupNavigationButton Command="local:GroupNavigationButton.NavigateToGroup"
                                            CommandParameter="{Binding}">
                  <ContentPresenter Content="{Binding Value}"
                                    ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplate}"
                                    ContentTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplateSelector}" />
               </local:GroupNavigationButton>
               
               <TextBlock Text=" - " />
            </StackPanel>
         </DataTemplate>

         <!-- When the property TableflowView.PinGroupHeaders is set, we only show the total number of items for the last group. -->
         <DataTemplate x:Key="groupItemTemplate">
            <local:GroupNavigationButton Command="local:GroupNavigationButton.NavigateToGroup"
                                         CommandParameter="{Binding}">
               <StackPanel Orientation="Horizontal"
                           TextElement.Foreground="{TemplateBinding TextElement.Foreground}">

                  <ContentPresenter Content="{Binding Value}"
                                    ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplate}"
                                    ContentTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplateSelector}"                                     
                                    TextBlock.FontWeight="Bold"/>

                  <TextBlock Text=" (" />
                  <TextBlock Text="{Binding ItemCount}" />
                  <TextBlock Text=" " />
                  <TextBlock x:Name="suffixRun"
                             Text="items" />
                  <TextBlock Text=")" />

               </StackPanel>
            </local:GroupNavigationButton>

            <DataTemplate.Triggers>
               <DataTrigger Binding="{Binding ItemCount}"
                            Value="1">
                  <Setter TargetName="suffixRun"
                          Property="Text"
                          Value="item" />
               </DataTrigger>
            </DataTemplate.Triggers>
         </DataTemplate>

         <!-- When the property TableflowView.AreGroupHeadersSticky is set, we will show the information for the parent groups seperated with a "-". -->
         <DataTemplate x:Key="stickyGroupTemplate">
            <StackPanel Orientation="Horizontal">
               <ItemsControl ItemsSource="{Binding Path=ParentGroups}"
                             ItemTemplate="{StaticResource parentGroupItemTemplate}"
                             Focusable="False">
                  <ItemsControl.ItemsPanel>
                     <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"
                                    IsItemsHost="True" />
                     </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
               </ItemsControl>

               <ContentPresenter Content="{Binding}"
                                 ContentTemplate="{StaticResource groupItemTemplate}" />
            </StackPanel>
         </DataTemplate>

         <DataTemplate x:Key="defaultGroupTemplate">
            <StackPanel Orientation="Horizontal">

               <ContentPresenter Content="{Binding Title}"
                                 ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.TitleTemplate}"
                                 ContentTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.TitleTemplateSelector}" />

               <TextBlock Text=": " />
               <ContentPresenter Content="{Binding Value}"
                                 ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplate}"
                                 ContentTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.ValueTemplateSelector}" />

               <TextBlock Text=" (" />
               <TextBlock Text="{Binding ItemCount}" />
               <TextBlock Text=" " />
               <TextBlock x:Name="suffixRun"
                          Text="items" />
               <TextBlock Text=")" />

            </StackPanel>

            <DataTemplate.Triggers>
               <DataTrigger Binding="{Binding ItemCount}"
                            Value="1">
                  <Setter TargetName="suffixRun"
                          Property="Text"
                          Value="item" />
               </DataTrigger>
            </DataTemplate.Triggers>
         </DataTemplate>
      </DataTemplate.Resources>

      <ContentPresenter x:Name="groupContentPresenter"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource defaultGroupTemplate}" />

      <DataTemplate.Triggers>
         <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).DataGridControl.View, Converter={x:Static cnv:TypeToBooleanConverter.Singleton}, ConverterParameter={x:Type views:TableflowView}}"
                      Value="True">
            <Setter Property="ContentTemplate"
                    Value="{StaticResource stickyGroupTemplate}"
                    TargetName="groupContentPresenter" />
         </DataTrigger>
      </DataTemplate.Triggers>
   </DataTemplate>

   <!-- Default DataTemplate for displaying a GroupLevelDescription (e.g. in a GroupByItem) -->
   <DataTemplate DataType="{x:Type local:GroupLevelDescription}">

      <ContentPresenter Content="{Binding Title}"
                        ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext.TitleTemplate}" />

   </DataTemplate>

   <!-- ValueConverter that is used to do DataTriggers on Content properties to check if they are null. -->
   <cnv:NullToBooleanConverter x:Key="nullToBooleanConverter" />

   <!-- ValueConverter that is used to do change the opacity of GroupHeaderControls in CardView. -->
   <cnv:LevelToOpacityConverter x:Key="levelToOpacityConverter" />

   <cnv:IntAdditionConverter x:Key="intAdditionConverter" />

   <!-- ValueConverter that is used to map GridLineThickness properties (of type double)
        to Thickness structures that we can set to BorderThickness properties in the templates. -->
   <cnv:ThicknessConverter x:Key="thicknessConverter" />

   <cnv:EmptyStringToBooleanConverter x:Key="emptyStringToBooleanConverter" />

   <Thickness x:Key="cellPadding"
              Left="2"
              Top="2"
              Right="2"
              Bottom="2" />

   <!-- ContextMenu used to choose the columns in a ColumnManagerRow -->
   <local:ColumnChooserContextMenu x:Key="columnManagerRowContextMenu">
      <local:ColumnChooserContextMenu.Resources>
         <local:DataGridCollectionViewSource x:Key="source"
                                             Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=(local:DataGridControl.DataGridContext).ColumnChooserColumns}" />
      </local:ColumnChooserContextMenu.Resources>

      <local:ColumnChooserContextMenu.ItemsSource>
         <Binding Source="{StaticResource source}" />
      </local:ColumnChooserContextMenu.ItemsSource>
   </local:ColumnChooserContextMenu>

   <!--**************************
   * Style: ListBoxItem Style (AutoFilter Options)
   **************************-->
   <Style x:Key="defaultAutoFilteringCheckBoxItemStyle"
          TargetType="ListBoxItem">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">

               <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}">

                  <CheckBox Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Focusable="False"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsSelected, Mode=TwoWay}"
                            Margin="2,2,2,2" />
               </Border>

            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>


   <DataTemplate x:Key="autoFilterGlyph">
      <Grid Width="11"
            Height="9">
         <Path Stretch="Fill"
               Data="M64.133,235.13263 L64.350203,238.7367 65.855009,238.74891 66.100509,235.16181 69.042509,232.28811 69.050509,231.03788 61.5,231.125 61.474998,232.25889 z"
               HorizontalAlignment="Left"
               Width="9.758">
            <Path.Fill>
               <LinearGradientBrush EndPoint="0.82,0.697"
                                    StartPoint="0.119,0.167">
                  <GradientStop Color="#FFFFFFFF"
                                Offset="0" />
                  <GradientStop Color="#FF505050"
                                Offset="1" />
               </LinearGradientBrush>
            </Path.Fill>
            <Path.Stroke>
               <LinearGradientBrush EndPoint="1,0.5"
                                    StartPoint="0,0.5">
                  <GradientStop Color="#FF272727"
                                Offset="1" />
                  <GradientStop Color="#FF8B8B8B"
                                Offset="0" />
               </LinearGradientBrush>
            </Path.Stroke>
         </Path>
         <Path HorizontalAlignment="Right"
               Margin="0,0,-0.125,0"
               VerticalAlignment="Bottom"
               Width="3.875"
               Height="2.375"
               Fill="#FF000000"
               Stretch="Fill"
               Stroke="{x:Null}"
               Data="M33.25,228.40948 L36.35,228.40948 34.725,230.12931 z" />
      </Grid>
   </DataTemplate>

   <DataTemplate x:Key="autoFilterDropDownGlyph">
      <Canvas Width="7.69"
              Height="3.9729">

         <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
               Stretch="Fill"
               Data="M312.81432,221.49666 L319.57009,221.49336 316.21963,224.62833 z"
               Width="7.69"
               Height="3.97299999999998" />

      </Canvas>
   </DataTemplate>

   <!-- Clear Filter Button Glyph -->
   <DataTemplate x:Key="clearFilterButtonGlyph"
                 DataType="">
      <Grid Opacity="0.5"
            Background="Transparent">
         <Canvas Width="9.840"
                 Height="9.839">
            <Path Fill="#FF221E1F"
                  Data="F1 M 9.438,7.896 L 6.447,4.905 L 9.407,1.945 C 9.896,1.456 9.946,0.715 9.521,0.290 C 9.095,-0.137 8.353,-0.086 7.865,0.402 L 4.905,3.362 L 1.975,0.433 C 1.486,-0.056 0.746,-0.106 0.320,0.320 C -0.106,0.746 -0.056,1.487 0.432,1.975 L 3.362,4.905 L 0.402,7.865 C -0.086,8.353 -0.137,9.095 0.290,9.521 C 0.715,9.947 1.456,9.896 1.945,9.408 L 4.905,6.448 L 7.896,9.438 C 8.384,9.926 9.125,9.976 9.551,9.550 C 9.977,9.125 9.926,8.383 9.438,7.896 Z" />
         </Canvas>
      </Grid>
   </DataTemplate>
   
   <DataTemplate x:Key="connectionStateLoadingGlyph">
      <DataTemplate.Resources>
         <SolidColorBrush Color="Black" x:Key="backgroundBrushAdoners"/>

         <Storyboard x:Key="loadingStoryboard" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
               <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
               <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="-10.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
               <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
               <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="17.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
               <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
               <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="20.875"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
               <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
               <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="-17.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
               <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
               <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="-10.375"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="Black"/>               
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="Black"/>               
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="Black"/>               
            </ColorAnimationUsingKeyFrames>
         </Storyboard>       

      </DataTemplate.Resources>
      <Grid x:Name="rootLayout"
            Background="Transparent">
         <Canvas Width="27.466" Height="24.066">

            <Canvas>
               <Path x:Name="path" Fill="Black" Data="F1 M 17.067,3.300 C 17.067,5.123 15.589,6.600 13.767,6.600 C 11.944,6.600 10.467,5.123 10.467,3.300 C 10.467,1.478 11.944,0.000 13.767,0.000 C 15.589,0.000 17.067,1.478 17.067,3.300 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
               <Path x:Name="path2" Fill="Black" Data="F1 M 6.600,20.767 C 6.600,22.590 5.123,24.066 3.300,24.066 C 1.478,24.066 0.000,22.590 0.000,20.767 C 0.000,18.944 1.478,17.467 3.300,17.467 C 5.123,17.467 6.600,18.944 6.600,20.767 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
               <Path x:Name="path3" Fill="Black" Data="F1 M 27.466,20.767 C 27.466,22.590 25.989,24.066 24.167,24.066 C 22.344,24.066 20.867,22.590 20.867,20.767 C 20.867,18.944 22.344,17.467 24.167,17.467 C 25.989,17.467 27.466,18.944 27.466,20.767 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
            </Canvas>
         </Canvas>
         <Grid.ToolTip>
            <ToolTip x:Name="errorToolTip"
                     Visibility="Collapsed">
               <ContentPresenter />
            </ToolTip>
         </Grid.ToolTip>
         <Grid.Triggers>
            <EventTrigger RoutedEvent="Grid.Loaded">
               <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{StaticResource loadingStoryboard}"/>
               </EventTrigger.Actions>
            </EventTrigger>
         </Grid.Triggers>
      </Grid>      
   </DataTemplate>
   
   <DataTemplate x:Key="connectionStateErrorGlyph">
      <DataTemplate.Resources>
         <SolidColorBrush Color="Black" x:Key="backgroundBrushAdoners"/>
         <Storyboard x:Key="errorStoryboard" RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:01" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:02" Value="#FF970000"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:01" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:02" Value="#FF970000"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
               <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:01" Value="#FF970000"/>
               <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="Red"/>
               <SplineColorKeyFrame KeyTime="00:00:02" Value="#FF970000"/>
            </ColorAnimationUsingKeyFrames>
         </Storyboard>

      </DataTemplate.Resources>
      <Grid x:Name="rootLayout"
            Background="Transparent">
         <Canvas Width="27.466" Height="24.066">

            <Canvas>
               <Path x:Name="path" Fill="Black" Data="F1 M 17.067,3.300 C 17.067,5.123 15.589,6.600 13.767,6.600 C 11.944,6.600 10.467,5.123 10.467,3.300 C 10.467,1.478 11.944,0.000 13.767,0.000 C 15.589,0.000 17.067,1.478 17.067,3.300 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
               <Path x:Name="path2" Fill="Black" Data="F1 M 6.600,20.767 C 6.600,22.590 5.123,24.066 3.300,24.066 C 1.478,24.066 0.000,22.590 0.000,20.767 C 0.000,18.944 1.478,17.467 3.300,17.467 C 5.123,17.467 6.600,18.944 6.600,20.767 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
               <Path x:Name="path3" Fill="Black" Data="F1 M 27.466,20.767 C 27.466,22.590 25.989,24.066 24.167,24.066 C 22.344,24.066 20.867,22.590 20.867,20.767 C 20.867,18.944 22.344,17.467 24.167,17.467 C 25.989,17.467 27.466,18.944 27.466,20.767 Z" RenderTransformOrigin="0.5,0.5" Opacity="0.8">
                  <Path.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                     </TransformGroup>
                  </Path.RenderTransform>
               </Path>
            </Canvas>
         </Canvas>
         <Grid.ToolTip>
            <ToolTip x:Name="errorToolTip"
                     Visibility="Collapsed">
               <ContentPresenter />
            </ToolTip>
         </Grid.ToolTip>
      </Grid>
      <DataTemplate.Triggers>        
         <DataTrigger Binding="{Binding}"
                      Value="Error">
            <Setter TargetName="rootLayout"
                    Property="Visibility"
                    Value="Visible"/>
            <Setter Property="Visibility"
                    TargetName="errorToolTip"
                    Value="Visible"/>
            <Setter TargetName="errorToolTip"
                    Property="Content"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:DataGridControl.DataGridContext).DataGridControl.ConnectionError}"/>
            <DataTrigger.EnterActions>
               <BeginStoryboard Storyboard="{StaticResource errorStoryboard}"/>
            </DataTrigger.EnterActions>
         </DataTrigger>
      </DataTemplate.Triggers>
   </DataTemplate>

</ResourceDictionary>
